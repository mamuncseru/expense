{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","useState","title","setTitle","amount","onClick","console","log","ExpensesList","items","length","style","color","map","expense","id","ExpensesFilter","value","selected","onChange","event","onSaveYear","target","ChartBar","barFillHeight","maxValue","Math","round","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","setYear","filteredExpenses","filter","toString","filteredYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","onButtonState","type","min","step","NewExpense","formEnable","setFormEnable","buttonState","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","ReactDOM","render","document","getElementById"],"mappings":"gZAiBeA,EAdK,SAACC,GACnB,IAAMC,EAAQD,EAAME,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAMJ,EAAME,KAAKC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOL,EAAME,KAAKI,cAExB,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCN,IACtC,qBAAKM,UAAU,qBAAf,SAAqCF,IACrC,qBAAKE,UAAU,oBAAf,SAAoCH,QCH3BI,G,MANF,SAACR,GACZ,IAAMS,EAAU,QAAUT,EAAMO,UAEhC,OAAO,qBAAKA,UAAWE,EAAhB,SAA0BT,EAAMU,aCqB1BC,EAtBK,SAACX,GACnB,MAA0BY,mBAASZ,EAAMa,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KAOA,OACE,6BACA,eAAC,EAAD,CAAMP,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaL,KAAMF,EAAME,OACzB,sBAAKK,UAAU,4BAAf,UACE,6BAAKP,EAAMa,QACX,sBAAKN,UAAU,sBAAf,cAAuCP,EAAMe,aAE/C,wBAAQC,QAbS,WACnBF,EAAS,YACTG,QAAQC,IAAIL,IAWV,gCCGSM,EApBM,SAACnB,GAEpB,OAA2B,IAAvBA,EAAMoB,MAAMC,OACP,oBAAIC,MAAO,CAAEC,MAAO,OAAQhB,UAAU,0BAAtC,gCAIP,oBAAIA,UAAU,gBAAd,SACGP,EAAMoB,MAAMI,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEZ,MAAOY,EAAQZ,MACfE,OAAQU,EAAQV,OAChBb,KAAMuB,EAAQvB,MAHTuB,EAAQC,UCaRC,G,MAvBQ,SAAC3B,GAQtB,OACE,qBAAKO,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQqB,MAAO5B,EAAM6B,SAAUC,SATX,SAAAC,GACxB/B,EAAMgC,WAAWD,EAAME,OAAOL,QAQ1B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4B,eCIKM,G,MApBE,SAAClC,GAChB,IAAImC,EAAgB,KAMpB,OAJInC,EAAMoC,SAAW,IACnBD,EAAgBE,KAAKC,MAAOtC,EAAM4B,MAAQ5B,EAAMoC,SAAY,KAAO,KAInE,sBAAK7B,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVe,MAAO,CAAEiB,OAAQJ,OAGrB,qBAAK5B,UAAU,mBAAf,SAAmCP,EAAMwC,aCGhCC,G,MAjBD,SAACzC,GACX,IAAM0C,EAAmB1C,EAAM2C,WAAWnB,KAAI,SAAAoB,GAAS,OAAIA,EAAUhB,SAC/DiB,EAAeR,KAAKS,IAAL,MAAAT,KAAI,YAAQK,IACnC,OACE,qBAAKnC,UAAU,QAAf,SACGP,EAAM2C,WAAWnB,KAAI,SAACoB,GAAD,OACpB,cAAC,EAAD,CAEEhB,MAAOgB,EAAUhB,MACjBQ,SAAUS,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,cCaVO,EAvBO,SAAC/C,GACrB,IAD+B,EACzBgD,EAAkB,CACtB,CAAER,MAAO,MAAOZ,MAAO,GACvB,CAAEY,MAAO,MAAOZ,MAAO,GACvB,CAAEY,MAAO,MAAOZ,MAAO,GACvB,CAAEY,MAAO,MAAOZ,MAAO,GACvB,CAAEY,MAAO,MAAOZ,MAAO,GACvB,CAAEY,MAAO,MAAOZ,MAAO,GACvB,CAAEY,MAAO,MAAOZ,MAAO,GACvB,CAAEY,MAAO,MAAOZ,MAAO,GACvB,CAAEY,MAAO,MAAOZ,MAAO,GACvB,CAAEY,MAAO,MAAOZ,MAAO,GACvB,CAAEY,MAAO,MAAOZ,MAAO,GACvB,CAAEY,MAAO,MAAOZ,MAAO,IAbM,cAgBT5B,EAAMiD,UAhBG,IAgB/B,2BAAsC,CAAC,IAA5BxB,EAA2B,QAEpCuB,EADqBvB,EAAQvB,KAAKgD,YACJtB,OAASH,EAAQV,QAlBlB,8BAoB/B,OAAO,cAAC,EAAD,CAAO4B,WAAYK,KCObG,EArBE,SAACnD,GAChB,MAAwBY,mBAAS,QAAjC,mBAAOP,EAAP,KAAa+C,EAAb,KAKMC,EAAmBrD,EAAMoB,MAAMkC,QACnC,SAAC7B,GAAD,OAAaA,EAAQvB,KAAKI,cAAciD,aAAelD,KAGzD,OACE,8BACE,eAAC,EAAD,CAAME,UAAU,WAAhB,UACE,cAAC,EAAD,CAAgBsB,SAAUxB,EAAM2B,WAVd,SAACwB,GACvBJ,EAAQI,MAUJ,cAAC,EAAD,CAAeP,SAAUI,IACzB,cAAC,EAAD,CAAcjC,MAAOiC,U,OC4EdI,G,YA/FK,SAACzD,GACnB,MAAwCY,mBAAS,IAAjD,mBAAO8C,EAAP,KAAqBC,EAArB,KACA,EAA0C/C,mBAAS,IAAnD,mBAAOgD,EAAP,KAAsBC,EAAtB,KACA,EAAsCjD,mBAAS,IAA/C,mBAAOkD,EAAP,KAAoBC,EAApB,KAoDA,OACE,uBAAMC,SAnBc,SAACjC,GACrBA,EAAMkC,iBAEN,IAAMC,EAAc,CAClBrD,MAAO6C,EACP3C,QAAS6C,EACT1D,KAAM,IAAIiE,KAAKL,IAGjB9D,EAAMoE,kBAAkBF,GAExBlE,EAAMqE,eADc,GAEpBV,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAKf,UACE,sBAAKxD,UAAU,wBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,0CACA,uBACE+D,KAAK,OACL1C,MAAO8B,EACP5B,SArDiB,SAACC,GAC1B4B,EAAgB5B,EAAME,OAAOL,aAuDzB,sBAAKrB,UAAU,wBAAf,UACE,2CACA,uBACE+D,KAAK,SACLC,IAAI,OACJC,KAAK,OACL5C,MAAOgC,EACP9B,SApDkB,SAACC,GAC3B8B,EAAiB9B,EAAME,OAAOL,aAsD1B,sBAAKrB,UAAU,wBAAf,UACE,yCACA,uBACE+D,KAAK,OACLC,IAAI,aACJzB,IAAI,aACJlB,MAAOkC,EACPhC,SAtDgB,SAACC,GACzBgC,EAAehC,EAAME,OAAOL,gBAyD1B,sBAAKrB,UAAU,uBAAf,UACE,wBAAQ+D,KAAK,SAAb,oBACA,wBAAQA,KAAK,SAAb,iCC/DOG,EA1BI,SAACzE,GAClB,MAAoCY,oBAAS,GAA7C,mBAAO8D,EAAP,KAAmBC,EAAnB,KAgBA,OACE,qBAAKpE,UAAU,cAAf,SACGmE,EAAa,cAAC,EAAD,CAAaL,cAXJ,SAACO,GAC1BD,EAAcC,IAUkDR,kBAjBnC,SAACS,GAC9B,IAAMX,EAAW,2BACZW,GADY,IAEfnD,GAAIW,KAAKyC,SAASvB,aACpBvD,EAAM+E,aAAab,MAcf,wBAAQlD,QATQ,SAACe,GACrBA,EAAMkC,iBAENU,GAAc,IAMV,gCCpBFK,EAAiB,CACrB,CACEtD,GAAI,KACJb,MAAO,eACPE,OAAQ,MACRb,KAAM,IAAIiE,KAAK,KAAM,EAAG,KAE1B,CAAEzC,GAAI,KAAMb,MAAO,SAAUE,OAAQ,OAAQb,KAAM,IAAIiE,KAAK,KAAM,EAAG,KACrE,CACEzC,GAAI,KACJb,MAAO,gBACPE,OAAQ,OACRb,KAAM,IAAIiE,KAAK,KAAM,EAAG,KAE1B,CACEzC,GAAI,KACJb,MAAO,oBACPE,OAAQ,IACRb,KAAM,IAAIiE,KAAK,KAAM,EAAG,MAmBbc,EAfH,WACV,MAAgCrE,mBAASoE,GAAzC,mBAAO/B,EAAP,KAAiBiC,EAAjB,KAMA,OACE,gCACE,cAAC,EAAD,CAAYH,aANU,SAACtD,GACzByD,EAAY,CAACzD,GAAF,mBAAcwB,QAMvB,cAAC,EAAD,CAAU7B,MAAO6B,QChCvBkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8c325509.chunk.js","sourcesContent":["import React from 'react';\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React from 'react';\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import React, { useState } from 'react';\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\n\nconst ExpenseItem = (props) => {\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    setTitle('Updated!');\n    console.log(title);\n  }\n\n  return (\n    <li>\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date}/>\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n      <button onClick={clickHandler}>Change Title</button>\n    </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = (props) => {\n\n  if (props.items.length === 0) {\n    return <h2 style={{ color: 'red'}} className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n\n  const yearChangeHandler = event => {\n    props.onSaveYear(event.target.value);\n  }\n\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={yearChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n    const dataPointsValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointsValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from '../Chart/Chart';\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\n\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [year, setYear] = useState(\"2021\");\n\n  const saveYearHandler = (filteredYear) => {\n    setYear(filteredYear);\n  };\n  const filteredExpenses = props.items.filter(\n    (expense) => expense.date.getFullYear().toString() === year\n  );\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter selected={year} onSaveYear={saveYearHandler} />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value }\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    const buttonState = false;\n    props.onButtonState(buttonState);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__controls\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__controls\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__controls\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = (props) => {\n  const [formEnable, setFormEnable] = useState(false);\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()    };\n    props.onAddExpense(expenseData);\n  }\n  const buttonStateHandler = (buttonState) => {\n    setFormEnable(buttonState);\n  }\n  const buttonHandler = (event) => {\n    event.preventDefault();\n\n    setFormEnable(true);\n\n  }\n  return (\n    <div className=\"new-expense\">\n      {formEnable ? <ExpenseForm onButtonState={buttonStateHandler} onSaveExpenseData={saveExpenseDataHandler}/>\n:       <button onClick={buttonHandler}>Add New Expense</button>\n}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses([expense, ...expenses]);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}